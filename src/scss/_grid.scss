@use "sass:math";
@use "./breakpoints";

$grid-columns: 12;
$grid-gaps: (
    0: 0,
    1: 0.25rem,
    2: 0.5rem,
    3: 1rem
);

// base layout classes:

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-wrap: wrap;
}

// grid gaps:

@each $key, $value in $grid-gaps {
    .gap-#{$key} > * { // whatever element it contains
        padding: $value;
    }

    .gap-#{$key} {
        margin-left: -$value;
        margin-right: -$value;
    }
}

// column classes:

@include breakpoints.xs {

    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0; // so that it doesn't grow to fill the space
            width: math.div(100% * $i, $grid-columns);
            border: 0.5px solid orangered;
        }
    }
}

@include breakpoints.sm {

    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div(100% * $i, $grid-columns);
            border: 0.5px solid orangered;
        }
    }
}

@include breakpoints.md {

    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div(100% * $i, $grid-columns);
            border: 0.5px solid orangered;
        }
    }
}

@include breakpoints.lg {

    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div(100% * $i, $grid-columns);
            border: 0.5px solid orangered;
        }
    }
}

@include breakpoints.xl {

    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div(100% * $i, $grid-columns);
            border: 0.5px solid orangered;
        }
    }
}